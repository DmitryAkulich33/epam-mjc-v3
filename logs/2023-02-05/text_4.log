2023-02-05 12:39:24 DEBUG hibernate.validator.internal.engine.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2023-02-05 12:39:24 DEBUG hibernate.validator.internal.engine.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2023-02-05 12:39:24 DEBUG hibernate.validator.internal.engine.AbstractConfigurationImpl - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2023-02-05 12:39:24 DEBUG validator.internal.xml.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2023-02-05 12:39:24 DEBUG validator.internal.xml.config.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2023-02-05 12:39:24 DEBUG validator.internal.xml.config.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2023-02-05 12:39:24 DEBUG validator.internal.xml.config.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2023-02-05 12:39:24 DEBUG validator.internal.xml.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2023-02-05 12:39:24 DEBUG validator.internal.engine.resolver.TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2023-02-05 12:39:24 DEBUG validator.internal.engine.resolver.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2023-02-05 12:39:24 DEBUG hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2023-02-05 12:39:24 DEBUG hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2023-02-05 12:39:24 DEBUG hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2023-02-05 12:39:24 DEBUG hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2023-02-05 12:39:24 DEBUG hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2023-02-05 12:39:24 DEBUG hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'error'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameViewResolver'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@11389053'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conventionErrorViewResolver'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorAttributes'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'basicErrorController'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'environment'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mbeanExporter'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'objectNamingStrategy'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2472c7d8'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mbeanServer'
2023-02-05 12:39:24 DEBUG org.springframework.jmx.support.JmxUtils - Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@1d8d30f7
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
2023-02-05 12:39:24 DEBUG org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationAvailability'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher$DataSourceInitializationCompletionListener'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'lifecycleProcessor'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'abstractRepository'
2023-02-05 12:39:24 DEBUG org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2023-02-05 12:39:24 DEBUG data.repository.core.support.RepositoryFactorySupport - Initializing repository instance for com.epam.dao.AbstractRepository…
2023-02-05 12:39:24 DEBUG org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2023-02-05 12:39:24 DEBUG data.repository.core.support.RepositoryFactorySupport - Finished creation of repository instance for com.epam.dao.AbstractRepository.
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'stringHttpMessageConverter'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'messageConverters'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pagedResourcesAssembler'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'halLinkDisocoverer'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultRelProvider'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'annotationRelProvider'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'linkDiscoverers'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'linkDiscovererRegistry'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'linkDiscoverers' via factory method to bean named 'linkDiscovererRegistry'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.hateoas.config.WebMvcEntityLinksConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webMvcEntityLinks'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webMvcLinkBuilderFactory'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'entityLinksPluginRegistry'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'delegatingEntityLinks'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'delegatingEntityLinks' via factory method to bean named 'entityLinksPluginRegistry'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'representationModelProcessorInvoker'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'representationModelProcessorInvoker' via factory method to bean named 'authorModelProcessor'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'representationModelProcessorInvoker' via factory method to bean named 'commentModelProcessor'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'representationModelProcessorInvoker' via factory method to bean named 'newsModelProcessor'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'representationModelProcessorInvoker' via factory method to bean named 'tagModelProcessor'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.hateoas.config.RestTemplateHateoasConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration$HypermediaConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'halMessageConverterSupportedMediaTypeCustomizer'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.hateoas-org.springframework.boot.autoconfigure.hateoas.HateoasProperties'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcTemplate'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskSchedulerBuilder'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionTemplate'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2023-02-05 12:39:24 DEBUG springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartResolver'
2023-02-05 12:39:24 DEBUG springframework.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2023-02-05 12:39:24 DEBUG springframework.jmx.export.annotation.AnnotationMBeanExporter - Autodetecting user-defined JMX MBeans
2023-02-05 12:39:24 DEBUG springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2023-02-05 12:39:24 DEBUG springframework.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2023-02-05 12:39:24 DEBUG org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483646
2023-02-05 12:39:24 INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-02-05 12:39:24 INFO  boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-02-05 12:39:24 DEBUG org.springframework.context.support.DefaultLifecycleProcessor - Successfully started bean 'webServerStartStop'
2023-02-05 12:39:24 DEBUG org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2023-02-05 12:39:24 DEBUG org.springframework.context.support.DefaultLifecycleProcessor - Successfully started bean 'webServerGracefulShutdown'
2023-02-05 12:39:24 DEBUG springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.DataSourceTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HypermediaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.hateoas.EntityModel', 'org.springframework.web.bind.annotation.RequestMapping', 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter', 'org.springframework.plugin.core.Plugin' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   HypermediaAutoConfiguration.HypermediaConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.hateoas.client.LinkDiscoverers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HypermediaHttpMessageConverterConfiguration#halMessageConverterSupportedMediaTypeCustomizer matched:
      - @ConditionalOnProperty (spring.hateoas.use-hal-as-default-json-media-type) matched (OnPropertyCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a primary bean from beans 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BitronixJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'bitronix.tm.jndi.BitronixContext' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.DataSourceTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.PlatformTransactionManager' transactionManager (OnBeanCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.ogm.session.SessionFactory' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.ogm.session.Neo4jSession' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.DatabaseClient' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.connectionfactory.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport' org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)
         - Ancestor org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2023-02-05 12:39:24 DEBUG org.springframework.core.env.PropertySourcesPropertyResolver - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2023-02-05 12:39:24 INFO  com.epam.Application - Started Application in 5.065 seconds (JVM running for 6.823)
2023-02-05 12:39:24 DEBUG org.springframework.core.env.PropertySourcesPropertyResolver - Found key 'local.server.port' in PropertySource 'server.ports' with value of type Integer
2023-02-05 12:39:28 INFO  core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-02-05 12:39:28 INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-02-05 12:39:28 DEBUG org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-02-05 12:39:28 DEBUG org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-02-05 12:39:28 INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2023-02-05 12:39:28 DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/tags/1", parameters={}
2023-02-05 12:39:28 DEBUG servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.epam.controller.TagControllerImpl#getEntityById(Long)
2023-02-05 12:39:28 DEBUG springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2023-02-05 12:39:28 DEBUG com.epam.aspect.Logging - Enter: com.epam.controller.TagControllerImpl.getEntityById() with argument[s] = [1]
2023-02-05 12:39:28 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.TagServiceImpl.getTagDtoById() with argument[s] = [1]
2023-02-05 12:39:28 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2068768097<open>)] for JPA transaction
2023-02-05 12:39:28 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2023-02-05 12:39:28 DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@183917093 wrapping org.postgresql.jdbc.PgConnection@67e0fd6d] read-only
2023-02-05 12:39:28 DEBUG hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-02-05 12:39:28 DEBUG hibernate.engine.transaction.internal.TransactionImpl - begin
2023-02-05 12:39:28 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3f62ff0a]
2023-02-05 12:39:29 DEBUG org.hibernate.SQL - 
    select
        tag0_.id as id1_4_0_,
        tag0_.name as name2_4_0_ 
    from
        tag tag0_ 
    where
        tag0_.id=?
2023-02-05 12:39:29 DEBUG plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2023-02-05 12:39:29 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Tag#1]
2023-02-05 12:39:29 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = sport
2023-02-05 12:39:29 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2023-02-05 12:39:29 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = NOT NULL COLLECTION
2023-02-05 12:39:29 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:39:29 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Tag#1]
2023-02-05 12:39:29 DEBUG hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.epam.domain.Tag#1
2023-02-05 12:39:29 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2023-02-05 12:39:29 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2068768097<open>)]
2023-02-05 12:39:29 DEBUG hibernate.engine.transaction.internal.TransactionImpl - committing
2023-02-05 12:39:29 DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@183917093 wrapping org.postgresql.jdbc.PgConnection@67e0fd6d]
2023-02-05 12:39:29 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2023-02-05 12:39:29 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.TagDtoMapperImpl.toTagDto() with argument[s] = [Tag(name=sport)]
2023-02-05 12:39:29 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.TagDtoMapperImpl.toTagDto() with result = TagDto(id=1, name=sport)
2023-02-05 12:39:29 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.TagServiceImpl.getTagDtoById() with result = TagDto(id=1, name=sport)
2023-02-05 12:39:29 DEBUG com.epam.aspect.Logging - Exit: com.epam.controller.TagControllerImpl.getEntityById() with result = <200 OK OK,TagDto(id=1, name=sport),[]>
2023-02-05 12:39:29 DEBUG servlet.mvc.method.annotation.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json]
2023-02-05 12:39:29 DEBUG servlet.mvc.method.annotation.HttpEntityMethodProcessor - Writing [TagDto(id=1, name=sport)]
2023-02-05 12:39:29 DEBUG springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2023-02-05 12:39:29 DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2023-02-05 12:39:52 DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/authors/1", parameters={}
2023-02-05 12:39:52 DEBUG servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.epam.controller.AuthorControllerImpl#getEntityById(Long)
2023-02-05 12:39:52 DEBUG springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2023-02-05 12:39:52 DEBUG com.epam.aspect.Logging - Enter: com.epam.controller.AuthorControllerImpl.getEntityById() with argument[s] = [1]
2023-02-05 12:39:52 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.AuthorServiceImpl.getAuthorDtoById() with argument[s] = [1]
2023-02-05 12:39:52 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1238858707<open>)] for JPA transaction
2023-02-05 12:39:52 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2023-02-05 12:39:52 DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1386555766 wrapping org.postgresql.jdbc.PgConnection@67e0fd6d] read-only
2023-02-05 12:39:52 DEBUG hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-02-05 12:39:52 DEBUG hibernate.engine.transaction.internal.TransactionImpl - begin
2023-02-05 12:39:52 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2d8924ce]
2023-02-05 12:39:52 DEBUG org.hibernate.SQL - 
    select
        author0_.id as id1_0_0_,
        author0_.name as name2_0_0_ 
    from
        author author0_ 
    where
        author0_.id=?
2023-02-05 12:39:52 DEBUG plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2023-02-05 12:39:52 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Author#1]
2023-02-05 12:39:52 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Jim
2023-02-05 12:39:52 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2023-02-05 12:39:52 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = NOT NULL COLLECTION
2023-02-05 12:39:52 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:39:52 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Author#1]
2023-02-05 12:39:52 DEBUG hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.epam.domain.Author#1
2023-02-05 12:39:52 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2023-02-05 12:39:52 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1238858707<open>)]
2023-02-05 12:39:52 DEBUG hibernate.engine.transaction.internal.TransactionImpl - committing
2023-02-05 12:39:52 DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1386555766 wrapping org.postgresql.jdbc.PgConnection@67e0fd6d]
2023-02-05 12:39:52 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2023-02-05 12:39:52 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.AuthorDtoMapperImpl.toAuthorDto() with argument[s] = [Author(name=Jim)]
2023-02-05 12:39:52 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.AuthorDtoMapperImpl.toAuthorDto() with result = AuthorDto(id=1, name=Jim)
2023-02-05 12:39:52 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.AuthorServiceImpl.getAuthorDtoById() with result = AuthorDto(id=1, name=Jim)
2023-02-05 12:39:52 DEBUG com.epam.aspect.Logging - Exit: com.epam.controller.AuthorControllerImpl.getEntityById() with result = <200 OK OK,AuthorDto(id=1, name=Jim),[]>
2023-02-05 12:39:52 DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=1, idle=9, waiting=0)
2023-02-05 12:39:52 DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-02-05 12:39:52 DEBUG servlet.mvc.method.annotation.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json]
2023-02-05 12:39:52 DEBUG servlet.mvc.method.annotation.HttpEntityMethodProcessor - Writing [AuthorDto(id=1, name=Jim)]
2023-02-05 12:39:52 DEBUG springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2023-02-05 12:39:52 DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2023-02-05 12:40:16 DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/news/1", parameters={}
2023-02-05 12:40:16 DEBUG servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.epam.controller.NewsControllerImpl#getEntityById(Long)
2023-02-05 12:40:16 DEBUG springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2023-02-05 12:40:16 DEBUG com.epam.aspect.Logging - Enter: com.epam.controller.NewsControllerImpl.getEntityById() with argument[s] = [1]
2023-02-05 12:40:16 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.NewsServiceImpl.getNewsDtoById() with argument[s] = [1]
2023-02-05 12:40:16 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(694070047<open>)] for JPA transaction
2023-02-05 12:40:16 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2023-02-05 12:40:16 DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@967576505 wrapping org.postgresql.jdbc.PgConnection@67e0fd6d] read-only
2023-02-05 12:40:16 DEBUG hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-02-05 12:40:16 DEBUG hibernate.engine.transaction.internal.TransactionImpl - begin
2023-02-05 12:40:16 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6944a839]
2023-02-05 12:40:16 DEBUG org.hibernate.SQL - 
    select
        news0_.id as id1_2_0_,
        news0_.author_id as author_i6_2_0_,
        news0_.content as content2_2_0_,
        news0_.created as created3_2_0_,
        news0_.modified as modified4_2_0_,
        news0_.title as title5_2_0_ 
    from
        news news0_ 
    where
        news0_.id=?
2023-02-05 12:40:16 DEBUG hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.epam.domain.News#1
2023-02-05 12:40:16 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2023-02-05 12:40:16 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(694070047<open>)]
2023-02-05 12:40:16 DEBUG hibernate.engine.transaction.internal.TransactionImpl - committing
2023-02-05 12:40:16 DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@967576505 wrapping org.postgresql.jdbc.PgConnection@67e0fd6d]
2023-02-05 12:40:16 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2023-02-05 12:40:16 ERROR com.epam.aspect.Logging - Exception in com.epam.service.NewsServiceImpl.getNewsDtoById() with cause = NULL
2023-02-05 12:40:16 ERROR com.epam.aspect.Logging - Exception in com.epam.controller.NewsControllerImpl.getEntityById() with cause = NULL
2023-02-05 12:40:16 DEBUG servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.epam.exception.ControllerExceptionHandler#handleNewsNotFoundException(NewsNotFoundException)
2023-02-05 12:40:16 ERROR com.epam.exception.ControllerExceptionHandler - News is not found (id = 1)
com.epam.exception.NewsNotFoundException: news.id.not.found
	at com.epam.service.NewsServiceImpl.lambda$getNewsById$0(NewsServiceImpl.java:70) ~[main/:?]
	at java.util.Optional.orElseThrow(Optional.java:408) ~[?:?]
	at com.epam.service.NewsServiceImpl.getNewsById(NewsServiceImpl.java:70) ~[main/:?]
	at com.epam.service.NewsServiceImpl.getNewsDtoById(NewsServiceImpl.java:44) ~[main/:?]
	at com.epam.service.NewsServiceImpl$$FastClassBySpringCGLIB$$f6392bf.invoke(<generated>) ~[main/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at com.epam.aspect.Logging.logAround(Logging.java:31) ~[main/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at com.epam.service.NewsServiceImpl$$EnhancerBySpringCGLIB$$c17fbd66.getNewsDtoById(<generated>) ~[main/:?]
	at com.epam.controller.NewsControllerImpl.getEntityById(NewsControllerImpl.java:46) ~[main/:?]
	at com.epam.controller.NewsControllerImpl$$FastClassBySpringCGLIB$$343bcb37.invoke(<generated>) ~[main/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:119) ~[spring-context-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at com.epam.aspect.Logging.logAround(Logging.java:31) ~[main/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at com.epam.controller.NewsControllerImpl$$EnhancerBySpringCGLIB$$a9f56150.getEntityById(<generated>) ~[main/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878) ~[spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792) ~[spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) [spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626) [tomcat-embed-core-9.0.46.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733) [tomcat-embed-core-9.0.46.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at java.lang.Thread.run(Thread.java:834) [?:?]
2023-02-05 12:40:16 DEBUG servlet.mvc.method.annotation.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-02-05 12:40:16 DEBUG servlet.mvc.method.annotation.HttpEntityMethodProcessor - Writing [ExceptionResponse(errorMessage=News is not found (id = 1), errorCode=40402)]
2023-02-05 12:40:16 DEBUG servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Resolved [com.epam.exception.NewsNotFoundException: news.id.not.found]
2023-02-05 12:40:16 DEBUG springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2023-02-05 12:40:16 DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2023-02-05 12:40:22 DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/news/2", parameters={}
2023-02-05 12:40:22 DEBUG servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.epam.controller.NewsControllerImpl#getEntityById(Long)
2023-02-05 12:40:22 DEBUG springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2023-02-05 12:40:22 DEBUG com.epam.aspect.Logging - Enter: com.epam.controller.NewsControllerImpl.getEntityById() with argument[s] = [2]
2023-02-05 12:40:22 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.NewsServiceImpl.getNewsDtoById() with argument[s] = [2]
2023-02-05 12:40:22 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1240703956<open>)] for JPA transaction
2023-02-05 12:40:22 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2023-02-05 12:40:22 DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@217130126 wrapping org.postgresql.jdbc.PgConnection@67e0fd6d] read-only
2023-02-05 12:40:22 DEBUG hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-02-05 12:40:22 DEBUG hibernate.engine.transaction.internal.TransactionImpl - begin
2023-02-05 12:40:22 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1122835c]
2023-02-05 12:40:22 DEBUG org.hibernate.SQL - 
    select
        news0_.id as id1_2_0_,
        news0_.author_id as author_i6_2_0_,
        news0_.content as content2_2_0_,
        news0_.created as created3_2_0_,
        news0_.modified as modified4_2_0_,
        news0_.title as title5_2_0_ 
    from
        news news0_ 
    where
        news0_.id=?
2023-02-05 12:40:22 DEBUG hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.epam.domain.News#2
2023-02-05 12:40:22 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2023-02-05 12:40:22 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1240703956<open>)]
2023-02-05 12:40:22 DEBUG hibernate.engine.transaction.internal.TransactionImpl - committing
2023-02-05 12:40:22 DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@217130126 wrapping org.postgresql.jdbc.PgConnection@67e0fd6d]
2023-02-05 12:40:22 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2023-02-05 12:40:22 ERROR com.epam.aspect.Logging - Exception in com.epam.service.NewsServiceImpl.getNewsDtoById() with cause = NULL
2023-02-05 12:40:22 ERROR com.epam.aspect.Logging - Exception in com.epam.controller.NewsControllerImpl.getEntityById() with cause = NULL
2023-02-05 12:40:22 DEBUG servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.epam.exception.ControllerExceptionHandler#handleNewsNotFoundException(NewsNotFoundException)
2023-02-05 12:40:22 ERROR com.epam.exception.ControllerExceptionHandler - News is not found (id = 2)
com.epam.exception.NewsNotFoundException: news.id.not.found
	at com.epam.service.NewsServiceImpl.lambda$getNewsById$0(NewsServiceImpl.java:70) ~[main/:?]
	at java.util.Optional.orElseThrow(Optional.java:408) ~[?:?]
	at com.epam.service.NewsServiceImpl.getNewsById(NewsServiceImpl.java:70) ~[main/:?]
	at com.epam.service.NewsServiceImpl.getNewsDtoById(NewsServiceImpl.java:44) ~[main/:?]
	at com.epam.service.NewsServiceImpl$$FastClassBySpringCGLIB$$f6392bf.invoke(<generated>) ~[main/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at com.epam.aspect.Logging.logAround(Logging.java:31) ~[main/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at com.epam.service.NewsServiceImpl$$EnhancerBySpringCGLIB$$c17fbd66.getNewsDtoById(<generated>) ~[main/:?]
	at com.epam.controller.NewsControllerImpl.getEntityById(NewsControllerImpl.java:46) ~[main/:?]
	at com.epam.controller.NewsControllerImpl$$FastClassBySpringCGLIB$$343bcb37.invoke(<generated>) ~[main/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:119) ~[spring-context-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at com.epam.aspect.Logging.logAround(Logging.java:31) ~[main/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692) ~[spring-aop-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at com.epam.controller.NewsControllerImpl$$EnhancerBySpringCGLIB$$a9f56150.getEntityById(<generated>) ~[main/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878) ~[spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792) ~[spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) [spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626) [tomcat-embed-core-9.0.46.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733) [tomcat-embed-core-9.0.46.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.15.RELEASE.jar:5.2.15.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.46.jar:9.0.46]
	at java.lang.Thread.run(Thread.java:834) [?:?]
2023-02-05 12:40:22 DEBUG servlet.mvc.method.annotation.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-02-05 12:40:22 DEBUG servlet.mvc.method.annotation.HttpEntityMethodProcessor - Writing [ExceptionResponse(errorMessage=News is not found (id = 2), errorCode=40402)]
2023-02-05 12:40:22 DEBUG servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Resolved [com.epam.exception.NewsNotFoundException: news.id.not.found]
2023-02-05 12:40:22 DEBUG springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2023-02-05 12:40:22 DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2023-02-05 12:40:22 DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-02-05 12:40:22 DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-02-05 12:40:25 DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/news/3", parameters={}
2023-02-05 12:40:25 DEBUG servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.epam.controller.NewsControllerImpl#getEntityById(Long)
2023-02-05 12:40:25 DEBUG springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2023-02-05 12:40:25 DEBUG com.epam.aspect.Logging - Enter: com.epam.controller.NewsControllerImpl.getEntityById() with argument[s] = [3]
2023-02-05 12:40:25 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.NewsServiceImpl.getNewsDtoById() with argument[s] = [3]
2023-02-05 12:40:25 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(615091765<open>)] for JPA transaction
2023-02-05 12:40:25 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2023-02-05 12:40:25 DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1638597828 wrapping org.postgresql.jdbc.PgConnection@67e0fd6d] read-only
2023-02-05 12:40:25 DEBUG hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-02-05 12:40:25 DEBUG hibernate.engine.transaction.internal.TransactionImpl - begin
2023-02-05 12:40:25 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@40f1be79]
2023-02-05 12:40:25 DEBUG org.hibernate.SQL - 
    select
        news0_.id as id1_2_0_,
        news0_.author_id as author_i6_2_0_,
        news0_.content as content2_2_0_,
        news0_.created as created3_2_0_,
        news0_.modified as modified4_2_0_,
        news0_.title as title5_2_0_ 
    from
        news news0_ 
    where
        news0_.id=?
2023-02-05 12:40:25 DEBUG plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.News#3]
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `author` : value = 2
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comments` : value = NOT NULL COLLECTION
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comments`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `content` : value = Saturday transfer gossip: Mourinho, Berge, Elanga, Caicedo, Bellingham, Gusto, Martinelli
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`content`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2022-03-15T15:55:52.611265
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `modified` : value = 2022-03-15T15:55:52.611265
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`modified`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tags` : value = NOT NULL COLLECTION
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `title` : value = Saturday transfer gossip
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.News#3]
2023-02-05 12:40:25 DEBUG hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.epam.domain.News#3
2023-02-05 12:40:25 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2023-02-05 12:40:25 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(615091765<open>)]
2023-02-05 12:40:25 DEBUG hibernate.engine.transaction.internal.TransactionImpl - committing
2023-02-05 12:40:25 DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1638597828 wrapping org.postgresql.jdbc.PgConnection@67e0fd6d]
2023-02-05 12:40:25 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2023-02-05 12:40:25 DEBUG org.hibernate.internal.SessionImpl - Initializing proxy: [com.epam.domain.Author#2]
2023-02-05 12:40:25 DEBUG org.hibernate.SQL - 
    select
        author0_.id as id1_0_0_,
        author0_.name as name2_0_0_ 
    from
        author author0_ 
    where
        author0_.id=?
2023-02-05 12:40:25 DEBUG plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Author#2]
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = John
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = NOT NULL COLLECTION
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Author#2]
2023-02-05 12:40:25 DEBUG hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.epam.domain.Author#2
2023-02-05 12:40:25 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.epam.domain.News.tags#3]
2023-02-05 12:40:25 DEBUG org.hibernate.SQL - 
    select
        tags0_.news_id as news_id1_3_0_,
        tags0_.tag_id as tag_id2_3_0_,
        tag1_.id as id1_4_1_,
        tag1_.name as name2_4_1_ 
    from
        news_tag tags0_ 
    inner join
        tag tag1_ 
            on tags0_.tag_id=tag1_.id 
    where
        tags0_.news_id=?
2023-02-05 12:40:25 DEBUG plan.exec.process.internal.ResultSetProcessorImpl - Preparing collection initializer : [com.epam.domain.News.tags#3]
2023-02-05 12:40:25 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.tags#3]
2023-02-05 12:40:25 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.tags#3]
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Tag#1]
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = sport
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = NOT NULL COLLECTION
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Tag#1]
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Tag#3]
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = shop
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = NOT NULL COLLECTION
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Tag#3]
2023-02-05 12:40:25 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: com.epam.domain.News.tags
2023-02-05 12:40:25 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [com.epam.domain.News.tags#3]
2023-02-05 12:40:25 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: com.epam.domain.News.tags
2023-02-05 12:40:25 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
2023-02-05 12:40:25 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.NewsDtoMapperImpl.toNewsDto() with argument[s] = [News(title=Saturday transfer gossip, content=Saturday transfer gossip: Mourinho, Berge, Elanga, Caicedo, Bellingham, Gusto, Martinelli, author=Author(name=John), created=2022-03-15T15:55:52.611265, modified=2022-03-15T15:55:52.611265, tags=[Tag(name=sport), Tag(name=shop)])]
2023-02-05 12:40:25 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.AuthorDtoMapperImpl.toAuthorDto() with argument[s] = [Author(name=John)]
2023-02-05 12:40:25 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.AuthorDtoMapperImpl.toAuthorDto() with result = AuthorDto(id=2, name=John)
2023-02-05 12:40:25 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.TagDtoMapperImpl.toTagDtoList() with argument[s] = [[Tag(name=sport), Tag(name=shop)]]
2023-02-05 12:40:25 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.TagDtoMapperImpl.toTagDtoList() with result = [TagDto(id=1, name=sport), TagDto(id=3, name=shop)]
2023-02-05 12:40:25 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.epam.domain.News.comments#3]
2023-02-05 12:40:25 DEBUG org.hibernate.SQL - 
    select
        comments0_.news_id as news_id5_1_0_,
        comments0_.id as id1_1_0_,
        comments0_.id as id1_1_1_,
        comments0_.content as content2_1_1_,
        comments0_.created as created3_1_1_,
        comments0_.modified as modified4_1_1_,
        comments0_.news_id as news_id5_1_1_ 
    from
        comment comments0_ 
    where
        comments0_.news_id=?
2023-02-05 12:40:25 DEBUG plan.exec.process.internal.ResultSetProcessorImpl - Preparing collection initializer : [com.epam.domain.News.comments#3]
2023-02-05 12:40:25 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.comments#3]
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Comment#5]
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `content` : value = Good day
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`content`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2022-04-17T15:55:52.611265
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `modified` : value = 2022-04-17T15:55:52.611265
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`modified`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = 3
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:25 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Comment#5]
2023-02-05 12:40:25 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: com.epam.domain.News.comments
2023-02-05 12:40:25 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [com.epam.domain.News.comments#3]
2023-02-05 12:40:25 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: com.epam.domain.News.comments
2023-02-05 12:40:25 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
2023-02-05 12:40:25 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.CommentDtoMapperImpl.toCommentDtoList() with argument[s] = [[Comment(content=Good day, news=News(title=Saturday transfer gossip, content=Saturday transfer gossip: Mourinho, Berge, Elanga, Caicedo, Bellingham, Gusto, Martinelli, author=Author(name=John), created=2022-03-15T15:55:52.611265, modified=2022-03-15T15:55:52.611265, tags=[Tag(name=sport), Tag(name=shop)]), created=2022-04-17T15:55:52.611265, modified=2022-04-17T15:55:52.611265)]]
2023-02-05 12:40:25 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.CommentDtoMapperImpl.toCommentDtoList() with result = [CommentDto(id=5, content=Good day, created=2022-04-17T15:55:52.611265, modified=2022-04-17T15:55:52.611265)]
2023-02-05 12:40:25 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.NewsDtoMapperImpl.toNewsDto() with result = NewsDto(id=3, title=Saturday transfer gossip, content=Saturday transfer gossip: Mourinho, Berge, Elanga, Caicedo, Bellingham, Gusto, Martinelli, author=AuthorDto(id=2, name=John), created=2022-03-15T15:55:52.611265, modified=2022-03-15T15:55:52.611265, tags=[TagDto(id=1, name=sport), TagDto(id=3, name=shop)], comments=[CommentDto(id=5, content=Good day, created=2022-04-17T15:55:52.611265, modified=2022-04-17T15:55:52.611265)])
2023-02-05 12:40:25 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.NewsServiceImpl.getNewsDtoById() with result = NewsDto(id=3, title=Saturday transfer gossip, content=Saturday transfer gossip: Mourinho, Berge, Elanga, Caicedo, Bellingham, Gusto, Martinelli, author=AuthorDto(id=2, name=John), created=2022-03-15T15:55:52.611265, modified=2022-03-15T15:55:52.611265, tags=[TagDto(id=1, name=sport), TagDto(id=3, name=shop)], comments=[CommentDto(id=5, content=Good day, created=2022-04-17T15:55:52.611265, modified=2022-04-17T15:55:52.611265)])
2023-02-05 12:40:25 DEBUG com.epam.aspect.Logging - Exit: com.epam.controller.NewsControllerImpl.getEntityById() with result = <200 OK OK,NewsDto(id=3, title=Saturday transfer gossip, content=Saturday transfer gossip: Mourinho, Berge, Elanga, Caicedo, Bellingham, Gusto, Martinelli, author=AuthorDto(id=2, name=John), created=2022-03-15T15:55:52.611265, modified=2022-03-15T15:55:52.611265, tags=[TagDto(id=1, name=sport), TagDto(id=3, name=shop)], comments=[CommentDto(id=5, content=Good day, created=2022-04-17T15:55:52.611265, modified=2022-04-17T15:55:52.611265)]),[]>
2023-02-05 12:40:25 DEBUG servlet.mvc.method.annotation.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json]
2023-02-05 12:40:25 DEBUG servlet.mvc.method.annotation.HttpEntityMethodProcessor - Writing [NewsDto(id=3, title=Saturday transfer gossip, content=Saturday transfer gossip: Mourinho, Berge, Ela (truncated)...]
2023-02-05 12:40:25 DEBUG springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2023-02-05 12:40:25 DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2023-02-05 12:40:30 DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/news?pageNumber=1&pageSize=10&sortType=DESC", parameters={masked}
2023-02-05 12:40:30 DEBUG servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.epam.controller.NewsControllerImpl#getAllNews(Integer, Integer, String, String)
2023-02-05 12:40:30 DEBUG springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.controller.NewsControllerImpl.getAllNews() with argument[s] = [1, 10, DESC, created]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.NewsServiceImpl.getAllNews() with argument[s] = [1, 10, DESC, created]
2023-02-05 12:40:30 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1229244115<open>)] for JPA transaction
2023-02-05 12:40:30 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.count]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2023-02-05 12:40:30 DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@358814978 wrapping org.postgresql.jdbc.PgConnection@67e0fd6d] read-only
2023-02-05 12:40:30 DEBUG hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-02-05 12:40:30 DEBUG hibernate.engine.transaction.internal.TransactionImpl - begin
2023-02-05 12:40:30 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@c2dcd2]
2023-02-05 12:40:30 DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5a5497fa
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select count(*) from com.epam.domain.News x
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'epam'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'News'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'

2023-02-05 12:40:30 DEBUG hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2023-02-05 12:40:30 DEBUG hql.internal.ast.tree.FromElement - FromClause{level=1} : com.epam.domain.News (x) -> news0_
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} news news0_ ) )
2023-02-05 12:40:30 DEBUG hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-SqlNode
    |  \-SqlNode
    \-FromClause
       \-FromElement

2023-02-05 12:40:30 DEBUG hql.internal.ast.util.JoinProcessor - Using FROM fragment [news news0_]
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (news)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[news0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'news news0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=news,tableAlias=news0_,origin=null,columns={,className=com.epam.domain.News}}

2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select count(*) from com.epam.domain.News x
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select count(*) as col_0_0_ from news news0_
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2023-02-05 12:40:30 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        news news0_
2023-02-05 12:40:30 DEBUG org.hibernate.loader.Loader - Result set row: 0
2023-02-05 12:40:30 DEBUG org.hibernate.loader.Loader - Result row: 
2023-02-05 12:40:30 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2023-02-05 12:40:30 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1229244115<open>)]
2023-02-05 12:40:30 DEBUG hibernate.engine.transaction.internal.TransactionImpl - committing
2023-02-05 12:40:30 DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@358814978 wrapping org.postgresql.jdbc.PgConnection@67e0fd6d]
2023-02-05 12:40:30 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2023-02-05 12:40:30 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1229244115<open>)] for JPA transaction
2023-02-05 12:40:30 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2023-02-05 12:40:30 DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@358814978 wrapping org.postgresql.jdbc.PgConnection@67e0fd6d] read-only
2023-02-05 12:40:30 DEBUG hibernate.engine.transaction.internal.TransactionImpl - begin
2023-02-05 12:40:30 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@f920eb7]
2023-02-05 12:40:30 DEBUG hibernate.query.criteria.internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from news as generatedAlias0 order by generatedAlias0.created desc
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.epam.domain.News as generatedAlias0 order by generatedAlias0.created desc
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'epam'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'News'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'created'
       \-[DESCENDING] Node: 'desc'

2023-02-05 12:40:30 DEBUG hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2023-02-05 12:40:30 DEBUG hql.internal.ast.tree.FromElement - FromClause{level=1} : com.epam.domain.News (generatedAlias0) -> news0_
2023-02-05 12:40:30 DEBUG hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> news0_.id
2023-02-05 12:40:30 DEBUG hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> news0_.id
2023-02-05 12:40:30 DEBUG hql.internal.ast.tree.DotNode - getDataType() : created -> org.hibernate.type.LocalDateTimeType@2bb31455
2023-02-05 12:40:30 DEBUG hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0.created -> news0_.created
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} news0_.id ) ( FromClause{level=1} news news0_ ) ( order ( news0_.created news0_.id created ) desc ) )
2023-02-05 12:40:30 DEBUG hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity News): [news]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.epam.domain.News)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.epam.domain.News)
       | path: generatedAlias0.created
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.epam.domain.News)
       |  | originalText: generatedAlias0
       |  \-IdentNode
       |    persister: null
       |    originalText: created
       \-SqlNode

2023-02-05 12:40:30 DEBUG hql.internal.ast.util.JoinProcessor - Using FROM fragment [news news0_]
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (news)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'news0_.id as id1_2_' {alias=generatedAlias0, className=com.epam.domain.News, tableAlias=news0_}
    |  \-[SQL_TOKEN] SqlFragment: 'news0_.author_id as author_i6_2_, news0_.content as content2_2_, news0_.created as created3_2_, news0_.modified as modified4_2_, news0_.title as title5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[news0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'news news0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=news,tableAlias=news0_,origin=null,columns={,className=com.epam.domain.News}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'news0_.created' {propertyName=created,dereferenceType=PRIMITIVE,getPropertyPath=created,path=generatedAlias0.created,tableAlias=news0_,className=com.epam.domain.News,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'news0_.id' {alias=generatedAlias0, className=com.epam.domain.News, tableAlias=news0_}
       |  \-[IDENT] IdentNode: 'created' {originalText=created}
       \-[DESCENDING] SqlNode: 'desc'

2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from com.epam.domain.News as generatedAlias0 order by generatedAlias0.created desc
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select news0_.id as id1_2_, news0_.author_id as author_i6_2_, news0_.content as content2_2_, news0_.created as created3_2_, news0_.modified as modified4_2_, news0_.title as title5_2_ from news news0_ order by news0_.created desc
2023-02-05 12:40:30 DEBUG hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2023-02-05 12:40:30 DEBUG org.hibernate.SQL - 
    select
        news0_.id as id1_2_,
        news0_.author_id as author_i6_2_,
        news0_.content as content2_2_,
        news0_.created as created3_2_,
        news0_.modified as modified4_2_,
        news0_.title as title5_2_ 
    from
        news news0_ 
    order by
        news0_.created desc limit ?
2023-02-05 12:40:30 DEBUG org.hibernate.loader.Loader - Result set row: 0
2023-02-05 12:40:30 DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.epam.domain.News#6]
2023-02-05 12:40:30 DEBUG org.hibernate.loader.Loader - Result set row: 1
2023-02-05 12:40:30 DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.epam.domain.News#5]
2023-02-05 12:40:30 DEBUG org.hibernate.loader.Loader - Result set row: 2
2023-02-05 12:40:30 DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.epam.domain.News#4]
2023-02-05 12:40:30 DEBUG org.hibernate.loader.Loader - Result set row: 3
2023-02-05 12:40:30 DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.epam.domain.News#3]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.News#6]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `author` : value = 1
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comments` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comments`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `content` : value = Australian Open 2023: Aryna Sabalenka beats Elena Rybakina to win Melbourne title
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`content`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2023-02-04T21:21:53.604753
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `modified` : value = 2023-02-04T21:21:53.604753
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`modified`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tags` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `title` : value = Test title2
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.News#6]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.News#5]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `author` : value = 3
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comments` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comments`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `content` : value = Christian Streich: The skinny-dipping managerial maverick shaking up the Bundesliga
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`content`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2022-03-17T15:55:52.611265
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `modified` : value = 2022-03-17T15:55:52.611265
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`modified`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tags` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `title` : value = Christian Streich
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.News#5]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.News#4]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `author` : value = 3
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comments` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comments`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `content` : value = Morocco World Cup run - and the Englishman who helped plot it
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`content`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2022-03-16T15:55:52.611265
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `modified` : value = 2022-03-16T15:55:52.611265
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`modified`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tags` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `title` : value = Morocco World Cup run
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.News#4]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.News#3]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `author` : value = 2
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comments` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comments`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `content` : value = Saturday transfer gossip: Mourinho, Berge, Elanga, Caicedo, Bellingham, Gusto, Martinelli
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`content`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2022-03-15T15:55:52.611265
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `modified` : value = 2022-03-15T15:55:52.611265
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`modified`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tags` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `title` : value = Saturday transfer gossip
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.News#3]
2023-02-05 12:40:30 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2023-02-05 12:40:30 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1229244115<open>)]
2023-02-05 12:40:30 DEBUG hibernate.engine.transaction.internal.TransactionImpl - committing
2023-02-05 12:40:30 DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@358814978 wrapping org.postgresql.jdbc.PgConnection@67e0fd6d]
2023-02-05 12:40:30 DEBUG org.springframework.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2023-02-05 12:40:30 DEBUG org.hibernate.internal.SessionImpl - Initializing proxy: [com.epam.domain.Author#1]
2023-02-05 12:40:30 DEBUG org.hibernate.SQL - 
    select
        author0_.id as id1_0_0_,
        author0_.name as name2_0_0_ 
    from
        author author0_ 
    where
        author0_.id=?
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Author#1]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Jim
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Author#1]
2023-02-05 12:40:30 DEBUG hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.epam.domain.Author#1
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.epam.domain.News.tags#6]
2023-02-05 12:40:30 DEBUG org.hibernate.SQL - 
    select
        tags0_.news_id as news_id1_3_0_,
        tags0_.tag_id as tag_id2_3_0_,
        tag1_.id as id1_4_1_,
        tag1_.name as name2_4_1_ 
    from
        news_tag tags0_ 
    inner join
        tag tag1_ 
            on tags0_.tag_id=tag1_.id 
    where
        tags0_.news_id=?
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.ResultSetProcessorImpl - Preparing collection initializer : [com.epam.domain.News.tags#6]
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.tags#6]
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.tags#6]
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.tags#6]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Tag#1]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = sport
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Tag#1]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Tag#7]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = test23
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Tag#7]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Tag#8]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = test
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Tag#8]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: com.epam.domain.News.tags
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [com.epam.domain.News.tags#6]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: com.epam.domain.News.tags
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
2023-02-05 12:40:30 DEBUG org.hibernate.internal.SessionImpl - Initializing proxy: [com.epam.domain.Author#3]
2023-02-05 12:40:30 DEBUG org.hibernate.SQL - 
    select
        author0_.id as id1_0_0_,
        author0_.name as name2_0_0_ 
    from
        author author0_ 
    where
        author0_.id=?
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Author#3]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = David
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Author#3]
2023-02-05 12:40:30 DEBUG hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.epam.domain.Author#3
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.epam.domain.News.tags#5]
2023-02-05 12:40:30 DEBUG org.hibernate.SQL - 
    select
        tags0_.news_id as news_id1_3_0_,
        tags0_.tag_id as tag_id2_3_0_,
        tag1_.id as id1_4_1_,
        tag1_.name as name2_4_1_ 
    from
        news_tag tags0_ 
    inner join
        tag tag1_ 
            on tags0_.tag_id=tag1_.id 
    where
        tags0_.news_id=?
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.ResultSetProcessorImpl - Preparing collection initializer : [com.epam.domain.News.tags#5]
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.tags#5]
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.tags#5]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Tag#3]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = shop
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Tag#3]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: com.epam.domain.News.tags
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [com.epam.domain.News.tags#5]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: com.epam.domain.News.tags
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.epam.domain.News.tags#4]
2023-02-05 12:40:30 DEBUG org.hibernate.SQL - 
    select
        tags0_.news_id as news_id1_3_0_,
        tags0_.tag_id as tag_id2_3_0_,
        tag1_.id as id1_4_1_,
        tag1_.name as name2_4_1_ 
    from
        news_tag tags0_ 
    inner join
        tag tag1_ 
            on tags0_.tag_id=tag1_.id 
    where
        tags0_.news_id=?
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.ResultSetProcessorImpl - Preparing collection initializer : [com.epam.domain.News.tags#4]
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.tags#4]
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.tags#4]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Tag#4]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = culture
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Tag#4]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: com.epam.domain.News.tags
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [com.epam.domain.News.tags#4]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: com.epam.domain.News.tags
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
2023-02-05 12:40:30 DEBUG org.hibernate.internal.SessionImpl - Initializing proxy: [com.epam.domain.Author#2]
2023-02-05 12:40:30 DEBUG org.hibernate.SQL - 
    select
        author0_.id as id1_0_0_,
        author0_.name as name2_0_0_ 
    from
        author author0_ 
    where
        author0_.id=?
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Author#2]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = John
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = NOT NULL COLLECTION
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Author#2]
2023-02-05 12:40:30 DEBUG hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.epam.domain.Author#2
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.epam.domain.News.tags#3]
2023-02-05 12:40:30 DEBUG org.hibernate.SQL - 
    select
        tags0_.news_id as news_id1_3_0_,
        tags0_.tag_id as tag_id2_3_0_,
        tag1_.id as id1_4_1_,
        tag1_.name as name2_4_1_ 
    from
        news_tag tags0_ 
    inner join
        tag tag1_ 
            on tags0_.tag_id=tag1_.id 
    where
        tags0_.news_id=?
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.ResultSetProcessorImpl - Preparing collection initializer : [com.epam.domain.News.tags#3]
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.tags#3]
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.tags#3]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: com.epam.domain.News.tags
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [com.epam.domain.News.tags#3]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: com.epam.domain.News.tags
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.NewsDtoMapperImpl.toNewsDtoList() with argument[s] = [[News(title=Test title2, content=Australian Open 2023: Aryna Sabalenka beats Elena Rybakina to win Melbourne title, author=Author(name=Jim), created=2023-02-04T21:21:53.604753, modified=2023-02-04T21:21:53.604753, tags=[Tag(name=sport), Tag(name=test23), Tag(name=test)]), News(title=Christian Streich, content=Christian Streich: The skinny-dipping managerial maverick shaking up the Bundesliga, author=Author(name=David), created=2022-03-17T15:55:52.611265, modified=2022-03-17T15:55:52.611265, tags=[Tag(name=sport), Tag(name=shop)]), News(title=Morocco World Cup run, content=Morocco World Cup run - and the Englishman who helped plot it, author=Author(name=David), created=2022-03-16T15:55:52.611265, modified=2022-03-16T15:55:52.611265, tags=[Tag(name=sport), Tag(name=culture)]), News(title=Saturday transfer gossip, content=Saturday transfer gossip: Mourinho, Berge, Elanga, Caicedo, Bellingham, Gusto, Martinelli, author=Author(name=John), created=2022-03-15T15:55:52.611265, modified=2022-03-15T15:55:52.611265, tags=[Tag(name=sport), Tag(name=shop)])]]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.AuthorDtoMapperImpl.toAuthorDto() with argument[s] = [Author(name=Jim)]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.AuthorDtoMapperImpl.toAuthorDto() with result = AuthorDto(id=1, name=Jim)
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.TagDtoMapperImpl.toTagDtoList() with argument[s] = [[Tag(name=sport), Tag(name=test23), Tag(name=test)]]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.TagDtoMapperImpl.toTagDtoList() with result = [TagDto(id=1, name=sport), TagDto(id=7, name=test23), TagDto(id=8, name=test)]
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.epam.domain.News.comments#6]
2023-02-05 12:40:30 DEBUG org.hibernate.SQL - 
    select
        comments0_.news_id as news_id5_1_0_,
        comments0_.id as id1_1_0_,
        comments0_.id as id1_1_1_,
        comments0_.content as content2_1_1_,
        comments0_.created as created3_1_1_,
        comments0_.modified as modified4_1_1_,
        comments0_.news_id as news_id5_1_1_ 
    from
        comment comments0_ 
    where
        comments0_.news_id=?
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.ResultSetProcessorImpl - Preparing collection initializer : [com.epam.domain.News.comments#6]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: com.epam.domain.News.comments
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [com.epam.domain.News.comments#6]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: com.epam.domain.News.comments
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.CommentDtoMapperImpl.toCommentDtoList() with argument[s] = [[]]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.CommentDtoMapperImpl.toCommentDtoList() with result = []
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.AuthorDtoMapperImpl.toAuthorDto() with argument[s] = [Author(name=David)]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.AuthorDtoMapperImpl.toAuthorDto() with result = AuthorDto(id=3, name=David)
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.TagDtoMapperImpl.toTagDtoList() with argument[s] = [[Tag(name=sport), Tag(name=shop)]]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.TagDtoMapperImpl.toTagDtoList() with result = [TagDto(id=1, name=sport), TagDto(id=3, name=shop)]
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.epam.domain.News.comments#5]
2023-02-05 12:40:30 DEBUG org.hibernate.SQL - 
    select
        comments0_.news_id as news_id5_1_0_,
        comments0_.id as id1_1_0_,
        comments0_.id as id1_1_1_,
        comments0_.content as content2_1_1_,
        comments0_.created as created3_1_1_,
        comments0_.modified as modified4_1_1_,
        comments0_.news_id as news_id5_1_1_ 
    from
        comment comments0_ 
    where
        comments0_.news_id=?
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.ResultSetProcessorImpl - Preparing collection initializer : [com.epam.domain.News.comments#5]
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.comments#5]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Comment#7]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `content` : value = Super!!!
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`content`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2022-04-17T15:55:52.611265
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `modified` : value = 2022-04-19T15:55:52.611265
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`modified`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = 5
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Comment#7]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: com.epam.domain.News.comments
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [com.epam.domain.News.comments#5]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: com.epam.domain.News.comments
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.CommentDtoMapperImpl.toCommentDtoList() with argument[s] = [[Comment(content=Super!!!, news=News(title=Christian Streich, content=Christian Streich: The skinny-dipping managerial maverick shaking up the Bundesliga, author=Author(name=David), created=2022-03-17T15:55:52.611265, modified=2022-03-17T15:55:52.611265, tags=[Tag(name=sport), Tag(name=shop)]), created=2022-04-17T15:55:52.611265, modified=2022-04-19T15:55:52.611265)]]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.CommentDtoMapperImpl.toCommentDtoList() with result = [CommentDto(id=7, content=Super!!!, created=2022-04-17T15:55:52.611265, modified=2022-04-19T15:55:52.611265)]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.AuthorDtoMapperImpl.toAuthorDto() with argument[s] = [Author(name=David)]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.AuthorDtoMapperImpl.toAuthorDto() with result = AuthorDto(id=3, name=David)
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.TagDtoMapperImpl.toTagDtoList() with argument[s] = [[Tag(name=sport), Tag(name=culture)]]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.TagDtoMapperImpl.toTagDtoList() with result = [TagDto(id=1, name=sport), TagDto(id=4, name=culture)]
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.epam.domain.News.comments#4]
2023-02-05 12:40:30 DEBUG org.hibernate.SQL - 
    select
        comments0_.news_id as news_id5_1_0_,
        comments0_.id as id1_1_0_,
        comments0_.id as id1_1_1_,
        comments0_.content as content2_1_1_,
        comments0_.created as created3_1_1_,
        comments0_.modified as modified4_1_1_,
        comments0_.news_id as news_id5_1_1_ 
    from
        comment comments0_ 
    where
        comments0_.news_id=?
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.ResultSetProcessorImpl - Preparing collection initializer : [com.epam.domain.News.comments#4]
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.comments#4]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Comment#6]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `content` : value = Bad day
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`content`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2022-04-17T15:55:52.611265
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `modified` : value = 2022-04-18T15:55:52.611265
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`modified`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = 4
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Comment#6]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: com.epam.domain.News.comments
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [com.epam.domain.News.comments#4]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: com.epam.domain.News.comments
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.CommentDtoMapperImpl.toCommentDtoList() with argument[s] = [[Comment(content=Bad day, news=News(title=Morocco World Cup run, content=Morocco World Cup run - and the Englishman who helped plot it, author=Author(name=David), created=2022-03-16T15:55:52.611265, modified=2022-03-16T15:55:52.611265, tags=[Tag(name=sport), Tag(name=culture)]), created=2022-04-17T15:55:52.611265, modified=2022-04-18T15:55:52.611265)]]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.CommentDtoMapperImpl.toCommentDtoList() with result = [CommentDto(id=6, content=Bad day, created=2022-04-17T15:55:52.611265, modified=2022-04-18T15:55:52.611265)]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.AuthorDtoMapperImpl.toAuthorDto() with argument[s] = [Author(name=John)]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.AuthorDtoMapperImpl.toAuthorDto() with result = AuthorDto(id=2, name=John)
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.TagDtoMapperImpl.toTagDtoList() with argument[s] = [[Tag(name=sport), Tag(name=shop)]]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.TagDtoMapperImpl.toTagDtoList() with result = [TagDto(id=1, name=sport), TagDto(id=3, name=shop)]
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.epam.domain.News.comments#3]
2023-02-05 12:40:30 DEBUG org.hibernate.SQL - 
    select
        comments0_.news_id as news_id5_1_0_,
        comments0_.id as id1_1_0_,
        comments0_.id as id1_1_1_,
        comments0_.content as content2_1_1_,
        comments0_.created as created3_1_1_,
        comments0_.modified as modified4_1_1_,
        comments0_.news_id as news_id5_1_1_ 
    from
        comment comments0_ 
    where
        comments0_.news_id=?
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.ResultSetProcessorImpl - Preparing collection initializer : [com.epam.domain.News.comments#3]
2023-02-05 12:40:30 DEBUG plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.epam.domain.News.comments#3]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [com.epam.domain.Comment#5]
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `content` : value = Good day
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`content`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2022-04-17T15:55:52.611265
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `modified` : value = 2022-04-17T15:55:52.611265
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`modified`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `news` : value = 3
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`news`)  - enhanced for lazy-loading? - false
2023-02-05 12:40:30 DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.epam.domain.Comment#5]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: com.epam.domain.News.comments
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [com.epam.domain.News.comments#3]
2023-02-05 12:40:30 DEBUG hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: com.epam.domain.News.comments
2023-02-05 12:40:30 DEBUG hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Enter: com.epam.service.mapper.CommentDtoMapperImpl.toCommentDtoList() with argument[s] = [[Comment(content=Good day, news=News(title=Saturday transfer gossip, content=Saturday transfer gossip: Mourinho, Berge, Elanga, Caicedo, Bellingham, Gusto, Martinelli, author=Author(name=John), created=2022-03-15T15:55:52.611265, modified=2022-03-15T15:55:52.611265, tags=[Tag(name=sport), Tag(name=shop)]), created=2022-04-17T15:55:52.611265, modified=2022-04-17T15:55:52.611265)]]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.CommentDtoMapperImpl.toCommentDtoList() with result = [CommentDto(id=5, content=Good day, created=2022-04-17T15:55:52.611265, modified=2022-04-17T15:55:52.611265)]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.mapper.NewsDtoMapperImpl.toNewsDtoList() with result = [NewsDto(id=6, title=Test title2, content=Australian Open 2023: Aryna Sabalenka beats Elena Rybakina to win Melbourne title, author=AuthorDto(id=1, name=Jim), created=2023-02-04T21:21:53.604753, modified=2023-02-04T21:21:53.604753, tags=[TagDto(id=1, name=sport), TagDto(id=7, name=test23), TagDto(id=8, name=test)], comments=[]), NewsDto(id=5, title=Christian Streich, content=Christian Streich: The skinny-dipping managerial maverick shaking up the Bundesliga, author=AuthorDto(id=3, name=David), created=2022-03-17T15:55:52.611265, modified=2022-03-17T15:55:52.611265, tags=[TagDto(id=1, name=sport), TagDto(id=3, name=shop)], comments=[CommentDto(id=7, content=Super!!!, created=2022-04-17T15:55:52.611265, modified=2022-04-19T15:55:52.611265)]), NewsDto(id=4, title=Morocco World Cup run, content=Morocco World Cup run - and the Englishman who helped plot it, author=AuthorDto(id=3, name=David), created=2022-03-16T15:55:52.611265, modified=2022-03-16T15:55:52.611265, tags=[TagDto(id=1, name=sport), TagDto(id=4, name=culture)], comments=[CommentDto(id=6, content=Bad day, created=2022-04-17T15:55:52.611265, modified=2022-04-18T15:55:52.611265)]), NewsDto(id=3, title=Saturday transfer gossip, content=Saturday transfer gossip: Mourinho, Berge, Elanga, Caicedo, Bellingham, Gusto, Martinelli, author=AuthorDto(id=2, name=John), created=2022-03-15T15:55:52.611265, modified=2022-03-15T15:55:52.611265, tags=[TagDto(id=1, name=sport), TagDto(id=3, name=shop)], comments=[CommentDto(id=5, content=Good day, created=2022-04-17T15:55:52.611265, modified=2022-04-17T15:55:52.611265)])]
2023-02-05 12:40:30 DEBUG com.epam.aspect.Logging - Exit: com.epam.service.NewsServiceImpl.getAllNews() with result = [NewsDto(id=6, title=Test title2, content=Australian Open 2023: Aryna Sabalenka beats Elena Rybakina to win Melbourne title, author=AuthorDto(id=1, name=Jim), created=2023-02-04T21:21:53.604753, modified=2023-02-04T21:21:53.604753, tags=[TagDto(id=1, name=sport), TagDto(id=7, name=test23), TagDto(id=8, name=test)], comments=[]), NewsDto(id=5, title=Christian Streich, content=Christian Streich: The skinny-dipping managerial maverick shaking up the Bundesliga, author=AuthorDto(id=3, name=David), created=2022-03-17T15:55:52.611265, modified=2022-03-17T15:55:52.611265, tags=[TagDto(id=1, name=sport), TagDto(id=3, name=shop)], comments=[CommentDto(id=7, content=Super!!!, created=2022-04-17T15:55:52.611265, modified=2022-04-19T15:55:52.611265)]), NewsDto(id=4, title=Morocco World Cup run, content=Morocco World Cup run - and the Englishman who helped plot it, author=AuthorDto(id=3, name=David), created=2022-03-16T15:55:52.611265, modified=2022-03-16T15:55:52.611265, tags=[TagDto(id=1, name=sport), TagDto(id=4, name=culture)], comments=[CommentDto(id=6, content=Bad day, created=2022-04-17T15:55:52.611265, modified=2022-04-18T15:55:52.611265)]), NewsDto(id=3, title=Saturday transfer gossip, content=Saturday transfer gossip: Mourinho, Berge, Elanga, Caicedo, Bellingham, Gusto, Martinelli, author=AuthorDto(id=2, name=John), created=2022-03-15T15:55:52.611265, modified=2022-03-15T15:55:52.611265, tags=[TagDto(id=1, name=sport), TagDto(id=3, name=shop)], comments=[CommentDto(id=5, content=Good day, created=2022-04-17T15:55:52.611265, modified=2022-04-17T15:55:52.611265)])]
